:github_url: https://github.com/sensu/sensu-go-ansible/blob/master/plugins/modules/check.py

.. _check_module:

check -- Manage Sensu checks
============================

Create, update or delete Sensu Go check.

For more information, refer to the Sensu Go documentation at https://docs.sensu.io/sensu-go/latest/reference/checks/.




Examples
--------

.. code-block:: yaml+jinja

   
   - name: Check executing command every 30 seconds
     sensu.sensu_go.check:
       name: check
       command: check-cpu.sh -w 75 -c 90
       subscriptions:
         - checks
       interval: 30
       publish: yes

   - name: Check executing command with cron scheduler
     sensu.sensu_go.check:
       name: check
       command: check-cpu.sh -w 75 -c 90
       subscriptions:
         - systems
       handlers:
         - slack
       cron: "* * * * *"
       publish: yes

   - name: Ad-hoc scheduling
     sensu.sensu_go.check:
       name: check
       command: check-cpu.sh -w 75 -c 90
       subscriptions:
         - systems
       handlers:
         - slack
       interval: 60
       publish: no

   - name: Report events under proxy entity name instead of agent entity
     sensu.sensu_go.check:
       name: check
       command: http_check.sh https://sensu.io
       subscriptions:
         - proxy
       handlers:
         - slack
       interval: 60
       proxy_entity_name: sensu-site
       round_robin: yes
       publish: yes

   - name: Event that triggers hooks
     sensu.sensu_go.check:
       name: check
       command: http_check.sh https://sensu.io
       subscriptions: [ proxy ]
       # The upstream JSON payload for the hooks below would look like this:
       #
       #   "check_hooks": [
       #     {"0": ["passing-hook", "always-run-this-hook"]},
       #     {"critical": ["failing-hook", "always-run-this-hook"]}
       #   ]
       #
       # Ansible task simplifies this structure into a simple mapping:
       check_hooks:
         "0":
           - passing-hook
           - always-run-this-hook
         critical:
           - failing-hook
           - always-run-this-hook

   - name: Remove check
     sensu.sensu_go.check:
       name: my-check
       state: absent





See Also
--------

.. seealso::

   - :ref:`check_info_module`



Parameters
----------

annotations (optional)
  Custom metadata fields with fewer restrictions, as key/value pairs.

  These are preserved by Sensu but not accessible as tokens or identifiers, and are mainly intended for use with external tools.

  | **type**: dict

auth (optional)
  Authentication parameters. Can define each of them with ENV as well.

  | **type**: dict

  api_key (optional)
    The API key that should be used when authenticating. If this is not set, the value of the SENSU_API_KEY environment variable will be checked.

    This replaces *auth.user* and *auth.password* parameters.

    For more information about the API key, refer to the official Sensu documentation at https://docs.sensu.io/sensu-go/latest/guides/use-apikey-feature/.

    | **type**: str

  ca_path (optional)
    Path to the CA bundle that should be used to validate the backend certificate.

    If this parameter is not set, module will use the CA bundle that python is using.

    It is also possible to set this parameter via the *SENSU_CA_PATH* environment variable.

    | **type**: path

  password (optional)
    The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked.

    This parameter is ignored if the *auth.api_key* parameter is set.

    | **type**: str
    | **default**: P@ssw0rd!

  url (optional)
    Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked.

    | **type**: str
    | **default**: http://localhost:8080

  user (optional)
    The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.

    This parameter is ignored if the *auth.api_key* parameter is set.

    | **type**: str
    | **default**: admin

  verify (optional)
    Flag that controls the certificate validation.

    If you are using self-signed certificates, you can set this parameter to ``false``.

    ONLY USE THIS PARAMETER IN DEVELOPMENT SCENARIOS! In you use self-signed certificates in production, see the *auth.ca_path* parameter.

    It is also possible to set this parameter via the *SENSU_VERIFY* environment variable.

    | **type**: bool
    | **default**: True


check_hooks (optional)
  A mapping of response codes to hooks which will be run by the agent when that code is returned.

  Note that the structure of this parameter is a bit different from the one described at https://docs.sensu.io/sensu-go/latest/reference/checks/#check-hooks-attribute.

  See check hooks example below for more information on exact mapping structure.

  | **type**: dict

command (optional)
  Check command to run.

  Required if *state* is ``present``.

  | **type**: str

cron (optional)
  Schedule check requests using crontab syntax.

  Cannot be used when *interval* option is used.

  | **type**: str

env_vars (optional)
  A mapping of environment variable names and values to use with command execution.

  | **type**: dict

handlers (optional)
  List of handlers which receive check results.

  | **type**: list

high_flap_threshold (optional)
  High flap threshold.

  | **type**: int

interval (optional)
  Check request interval.

  Cannot be used when *cron* option is used.

  | **type**: int

labels (optional)
  Custom metadata fields that can be accessed within Sensu, as key/value pairs.

  | **type**: dict

low_flap_threshold (optional)
  Low flap threshold.

  | **type**: int

name (required)
  The Sensu resource's name. This name (in combination with the namespace where applicable) uniquely identifies the resource that Ansible operates on.

  If the resource with selected name already exists, Ansible module will update it to match the specification in the task.

  Consult the *name* metadata attribute specification in the upstream docs on https://docs.sensu.io/sensu-go/latest/reference/ for more details about valid names and other restrictions.

  | **type**: str

namespace (optional)
  RBAC namespace to operate in. If this is not set the value of the SENSU_NAMESPACE environment variable will be used.

  | **type**: str
  | **default**: default

output_metric_format (optional)
  Enable parsing of metrics in the specified format from this check's output.

  | **type**: str
  | **choices**: graphite_plaintext, influxdb_line, nagios_perfdata, opentsdb_line

output_metric_handlers (optional)
  List of handlers which receive check results. I'm not sure why this exists.

  | **type**: list

proxy_entity_name (optional)
  Entity name to associate this check with instead of the agent it ran on.

  | **type**: str

proxy_requests (optional)
  Allows you to assign the check to run for multiple entities according to their entity_attributes.

  | **type**: dict

  entity_attributes (optional)
    List of attribute checks for determining which proxy entities this check should be scheduled against.

    | **type**: list

  splay (optional)
    Enables or disables splaying of check request scheduling.

    | **type**: bool

  splay_coverage (optional)
    Percentage of the ``interval`` over which to splay checks.

    | **type**: int


publish (optional)
  Enables or disables scheduled publication of check requests.

  | **type**: bool

round_robin (optional)
  An array of environment variables to use with command execution.

  | **type**: bool

runtime_assets (optional)
  List of runtime assets required to run the check.

  | **type**: list

secrets (optional)
  List of secrets that are available to the command.

  | **type**: list

  name (required)
    Variable name that will contain the sensitive data.

    | **type**: str

  secret (required)
    Name of the secret that contains sensitive data.

    | **type**: str


state (optional)
  Target state of the Sensu object.

  | **type**: str
  | **default**: present
  | **choices**: present, absent

stdin (optional)
  Enables writing of serialized JSON data to the check command's stdin.

  Only usable with checks written specifically for Sensu Go.

  | **type**: bool

subscriptions (optional)
  List of subscriptions which receive check requests.

  Required if *state* is ``present``.

  | **type**: list

timeout (optional)
  Check execution timeout.

  | **type**: int

ttl (optional)
  Amount of time after which a check result is considered stale.

  | **type**: int





Return Values
-------------

object (success), dict, )
  object representing Sensu check



